Problem 1: Two Sum Problem

The Problem

Write a function, twoSum(nums, target), that takes an array of integers (nums) and an integer (target) as input. The goal is to find two numbers in the array nums that add up exactly to the target.

Your function should return the indices of the two numbers.

You may not use the same element twice. If no two numbers sum up to the target, the function must return an empty array ([]).

Input / Output

1. nums | (Array on Int) | [The list of numbers to search through]
2. target | (Integer) | [The specific sum the two numbers must equal]


Return

1. Array of Integers - The indices [i, j] of the two numbers that sum to the target. 

2. Returns an empty array ([]) if no solution is found.

Example 1: Solution Found

Input:

nums = [2, 7, 11, 15]
target = 9


Output:

[0, 1]


Explanation: Because nums[0] (which is 2) + nums[1] (which is 7) equals 9, we return the indices [0, 1].

Example 2: No Solution Found

Input:

nums = [3, 5, 8]
target = 20


Output:

[]


Explanation: No two numbers in the array sum to 20, so we return an empty array.

Constraints

2 ≤ nums.length ≤ 10^5

−10^9 ≤ nums[i] ≤ 10^9

−10^9 ≤ target ≤ 10^9

You must find the solution with a time complexity between O(n^2) and  O(n)